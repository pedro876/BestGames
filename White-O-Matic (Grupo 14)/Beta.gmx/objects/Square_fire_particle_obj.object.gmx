<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Square_fire_particle_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>step=false;
reduceAlpha=false;
randomize();
//declaración de variables
RD=0.5; //reduction limit
Vy=-4;
Vx=cos(random(3));
ay=0.05;
ax=0.1;
//AnglePerStep=random(pi/20);
SFPS=0.045; //Scale factor per step
MessFactor=0.8;
VyO=2;
color=irandom(2);
if(color==0){
    image_blend = make_colour_rgb(255,128,0);
} else if(color==1){
    image_blend = make_colour_rgb(255,200,0);
} else if(color==2){
    image_blend = make_colour_rgb(128,128,128);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(step){
AVX=sqrt(Vx*Vx); //Valor abosluto de Vx
AVY=sqrt(Vy*Vy); //Valor absoluto de Vy
//Movimiento
Vy=Vy+ay*(Vy/AVY)*VyO; //Suma o resta de aceleración en base al sentido
if(Vx&gt;0){
    Vx=Vx-ax;
    if(Vx&lt;0){
        Vx=0;
    }
} else if(Vx&lt;0){
    Vx=Vx+ax;
    if(Vx&gt;0){
        Vx=0;
    }
}
y=y+Vy;
x=x+Vx;
if(!reduceAlpha){
    image_xscale-=SFPS;
}
if(image_xscale&lt;RD){
    reduceAlpha=true;
}
if(!reduceAlpha){
    image_yscale-=SFPS;
}
if(image_yscale&lt;RD){
    reduceAlpha=true;
}
if(reduceAlpha){
    image_alpha=image_alpha-0.1;
    if(image_alpha&lt;=0){
        instance_destroy(self);
    }
}
}//fin de step
step=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
