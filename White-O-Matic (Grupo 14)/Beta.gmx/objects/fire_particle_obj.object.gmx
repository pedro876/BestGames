<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>fire_particle_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize();
//declaración de variables
Optimize=0;
CreateScale=1.3;
if(Optimize==1){
    GeneralSpeed=16;
} else {
    GeneralSpeed=14;
}
Distance=0;
reduceAlpha=false;
AlphaReduction=0.05;
AlphaLimit=0.5;
MaxDistance=300;
Vy=0;
Vx=GeneralSpeed;
ax=-0.05;
ay=0.05;
pos=0;
ypos=0;
SurfaceLimit=8;
MiddleLimit=12;
FlameThrowerHeight=32;
SFPS=0.01; //Scale factor per step
CDF=5; //Color difference factor in x
MessFactor=3.5;
VxO=1.5;
//Calculo de la posición de generación y color particulares
if(place_meeting(x,y,Up_flamethrower_obj) || place_meeting(x,y,Up_flamethrower_C_obj)){
    ypos=-1;
    Vy=GeneralSpeed;
    Vx=0;
    ay=-0.05;
    ax=0.05;
} else if(place_meeting(x,y,Down_flamethrower_obj) || place_meeting(x,y,Down_flamethrower_C_obj)){
    ypos=1;
    Vy=GeneralSpeed;
    Vx=0;
    ay=-0.05;
    ax=0.05;
}
if (ypos=0){
    for(i=0;(place_meeting(x,y-i-sprite_height/2,Right_flamethrower_obj) || place_meeting(x,y-i-sprite_height/2,Right_flamethrower_C_obj)) || (place_meeting(x,y-i-sprite_height/2,Left_flamethrower_obj) || place_meeting(x,y-i-sprite_height/2,Left_flamethrower_C_obj));i++){
        pos++;
    }
} else {
    for(i=0;(place_meeting(x-i-sprite_height/2,y,Up_flamethrower_obj) || place_meeting(x-i-sprite_height/2,y,Up_flamethrower_C_obj)) || (place_meeting(x-i-sprite_height/2,y,Down_flamethrower_obj) || place_meeting(x-i-sprite_height/2,y,Down_flamethrower_C_obj));i++){
        pos++;
    }
}
if(pos&lt;=SurfaceLimit || pos&gt;=(FlameThrowerHeight-SurfaceLimit)){
    image_blend = make_colour_rgb(255, 128, 0);
    depth=-2;
} else if((pos&gt;SurfaceLimit &amp;&amp; pos&lt;MiddleLimit) || (pos&gt;(FlameThrowerHeight-MiddleLimit) &amp;&amp; pos&lt;(FlameThrowerHeight-SurfaceLimit))){
    image_blend = make_colour_rgb(255, 200, 0);
    depth=-3;
} else if(pos&gt;=MiddleLimit &amp;&amp; pos&lt;=(FlameThrowerHeight-MiddleLimit)){
    image_blend = make_colour_rgb(255,230,0);
    depth=-4;
}
if(place_meeting(x,y,Left_flamethrower_obj) || place_meeting(x,y,Left_flamethrower_C_obj)){
    Vx=-Vx;
}
if(Optimize==1){
    if((place_meeting(x,y,Down_flamethrower_obj) || place_meeting(x,y,Down_flamethrower_C_obj))|| (place_meeting(x,y,Up_flamethrower_obj) || place_meeting(x,y,Up_flamethrower_C_obj))){
        image_yscale=CreateScale*Optimize;
    } else {
        image_xscale=CreateScale*Optimize;
    }
}
if(place_meeting(x,y,Left_flamethrower_C_obj) || place_meeting(x,y,Right_flamethrower_C_obj) || place_meeting(x,y,Down_flamethrower_C_obj) || place_meeting(x,y,Up_flamethrower_C_obj)){
    image_alpha=0;
    alarm_set(0,1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_alpha=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(ypos==0){
AVP=sqrt((pos-16)*(pos-16));//Valor absoluto de pos
AVX=sqrt(Vx*Vx); //Valor abosluto de Vx
AVY=sqrt(Vy*Vy); //Valor absoluto de Vy
//Movimiento
Vx=Vx+ax*(Vx/AVX); //Suma o resta de aceleración en base al sentido
Vy=Vy+ay*((AVP/16)+(CDF/16)/AVP)*VxO; //Multiplico la aceleración por la fracción de posición y sumo la diferencia visible de color en x
x=x+Vx;
image_xscale-=SFPS;
image_yscale-=SFPS;
Distance=Distance+abs(Vx);
if(!reduceAlpha &amp;&amp; Distance &gt; MaxDistance*AlphaLimit){
    reduceAlpha=true;
}
if(pos&lt;16){
    y=y+Vy;
    pos=pos+Vy;
    if(pos&gt;16 || (Distance&gt;MaxDistance || Distance&lt;-MaxDistance)){
        instance_destroy(self);
    }
    y=y+(cos(Distance)*3+cos(random(3))*MessFactor)*AVP/16;
    pos=pos+(cos(Distance)*3+cos(random(3))*MessFactor)*AVP/16;
}else if(pos&gt;=16){
    y=y-Vy;
    pos=pos-Vy;
    if(pos&lt;=16 || (Distance&gt;MaxDistance || Distance&lt;-MaxDistance)){
        instance_destroy(self);
    }
    y=y-(cos(Distance)*3-cos(random(3))*MessFactor)*sqrt((pos-16)*(pos-16))/16;
    pos=pos-(cos(Distance)*3-cos(random(3))*MessFactor)*sqrt((pos-16)*(pos-16))/16;
}
}
if(ypos!=0){
AVP=sqrt((pos-16)*(pos-16));//Valor absoluto de pos
AVX=sqrt(Vx*Vx); //Valor abosluto de Vx
AVY=sqrt(Vy*Vy); //Valor absoluto de Vy
//Movimiento
Vy=Vy+ay*(Vy/AVY); //Suma o resta de aceleración en base al sentido
Vx=Vx+ax*((AVP/16)+(CDF/16)/AVP)*VxO; //Multiplico la aceleración por la fracción de posición y sumo la diferencia visible de color en x
y=y+Vy*ypos;
image_xscale-=SFPS;
image_yscale-=SFPS;
Distance=Distance+Vy/**ypos*/;
if(!reduceAlpha &amp;&amp; Distance &gt; MaxDistance*AlphaLimit){
    reduceAlpha=true;
}
if(pos&lt;16){
    x=x+Vx;
    pos=pos+Vx;
    if(pos&gt;16 || (Distance&gt;MaxDistance || Distance&lt;-MaxDistance)){
        instance_destroy(self);
    }
    x=x+(cos(Distance)*3+cos(random(3))*MessFactor)*AVP/16;
    pos=pos+(cos(Distance)*3+cos(random(3))*MessFactor)*AVP/16;
}else if(pos&gt;=16){
    x=x-Vx;
    pos=pos-Vx;
    if(pos&lt;=16 || (Distance&gt;MaxDistance || Distance&lt;-MaxDistance)){
        instance_destroy(self);
    }
    x=x-(cos(Distance)*3-cos(random(3))*MessFactor)*sqrt((pos-16)*(pos-16))/16;
    pos=pos-(cos(Distance)*3-cos(random(3))*MessFactor)*sqrt((pos-16)*(pos-16))/16;
}
}
if(place_meeting(x+Vx*2,y+Vy*2,C_obj)){
    if(Distance&gt;32){
        AlphaReduction=0.2;
        reduceAlpha=true;
    }
}
if(reduceAlpha){
    image_alpha=image_alpha-AlphaReduction;
    if(image_alpha&lt;=0){
        instance_destroy(self);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="water_particle_obj">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="4" ename="water_obj">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
